/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Jacob Lubecki
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = GROUP
version = VERSION_NAME

android {
  compileSdkVersion 24
  buildToolsVersion "24.0.1"

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 24
    versionName version
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  // android
  compile 'com.android.support:customtabs:24.0.0'

  // retrofit
  compile 'com.squareup.retrofit2:retrofit:2.1.0'
  compile 'com.squareup.retrofit2:converter-gson:2.1.0'
  compile 'com.squareup.okhttp3:okhttp:3.3.1'
}


// Project Archive Binaries

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile

  failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

android.libraryVariants.all { variant ->
  variant.outputs.each { output ->
    def outputFile = output.outputFile

    if (outputFile != null && outputFile.name.endsWith('.aar')) {
      def fileName = "${BASE_NAME}-${version}.aar"
      output.outputFile = new File(outputFile.parent, fileName)
    }
  }
}

artifacts {
  archives javadocJar
  archives sourcesJar
}


// Bintray Maven upload

def siteUrl = 'https://github.com/birdcage/soundcloud-web-api-android'
def gitUrl = 'https://github.com/birdcage/soundcloud-web-api-android.git'
def issueUrl = 'https://github.com/birdcage/soundcloud-web-api-android/issues'

install {
  repositories.mavenInstaller {
    pom.project {
      packaging 'aar'

      name 'A Java wrapper for the SoundCloud Web API, optimized for use with the Android SDK.'
      url siteUrl

      licenses {
        license {
          name 'The MIT License'
          url 'https://opensource.org/licenses/MIT'
        }
      }

      developers {
        developer {
          id 'jacoblubecki'
          name 'Jacob Lubecki'
          email 'jacoblubecki@gmail.com'
        }
      }

      scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
      }
    }
  }
}

bintray {
  Properties properties = new Properties()
  def bintrayProperties = project.rootProject.file('bintray.properties')

  if(bintrayProperties.exists()) {
    properties.load(bintrayProperties.newDataInputStream())

    user = properties.getProperty("BINTRAY_USER")
    key = properties.getProperty("BINTRAY_KEY")
  }

  configurations = ['archives']

  pkg {
    repo = 'maven'
    name = 'soundcloud-web-api-android'
    desc = 'A Java wrapper for the SoundCloud Web API, optimized for use with the Android SDK.'

    websiteUrl = siteUrl
    vcsUrl = gitUrl
    issueTrackerUrl = issueUrl

    licenses = ["MIT"]

    publicDownloadNumbers = true

    labels = ['birdcage', 'soundcloud', 'API', 'Android', 'Java']
  }

  pkg.version {
    name = version
    released = new Date()
    vcsTag = version
  }
}
